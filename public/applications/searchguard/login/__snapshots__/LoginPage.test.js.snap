// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginPage can render the page with HTML in login title and subtitle 1`] = `
<div
  style={
    Object {
      "alignItems": "center",
      "display": "flex",
      "height": "100vh",
      "justifyContent": "center",
    }
  }
>
  <EuiPanel
    style={
      Object {
        "maxWidth": "350px",
      }
    }
  >
    <div
      style={
        Object {
          "margin": "auto",
          "maxWidth": "300px",
        }
      }
    >
      <EuiImage
        alt="Brand image"
        data-test-subj="sg.login.brandImage"
        size="fullWidth"
        url="plugins/searchguard/assets/my_logo.png"
      />
    </div>
    <EuiText
      data-test-subj="sg.login.title"
      textAlign="center"
    >
      <h2
        dangerouslySetInnerHTML={
          Object {
            "__html": "<h1 style=\\"color:blue;text-align:center;\\">Login</h1>",
          }
        }
      />
    </EuiText>
    <EuiText
      data-test-subj="sg.login.subTitle"
      textAlign="center"
    >
      <p
        dangerouslySetInnerHTML={
          Object {
            "__html": "<div style=\\"color:red;background:#ffe5e5;\\"><ul><li>abc</li><li>def</li></ul></div>",
          }
        }
      />
    </EuiText>
    <LicenseWarningCallout
      configService={
        UiConfigService {
          "apiService": undefined,
          "config": Object {
            "authinfo": Object {},
            "elasticsearch": Object {},
            "kibana": Object {},
            "restapiinfo": Object {},
            "searchguard": Object {
              "basicauth": Object {
                "alternative_login": Object {
                  "button_text": "Login with provider",
                  "buttonstyle": "",
                  "headers": Array [],
                  "show_for_parameter": "",
                  "valid_redirects": Array [],
                },
                "login": Object {
                  "brandimage": "plugins/searchguard/assets/my_logo.png",
                  "buttonstyle": "background-color:#4CAF50;border:none;color:white;font-size:16px;",
                  "showbrandimage": true,
                  "subtitle": "<div style=\\"color:red;background:#ffe5e5;\\"><ul><li>abc</li><li>def</li></ul></div>",
                  "title": "<h1 style=\\"color:blue;text-align:center;\\">Login</h1>",
                },
              },
            },
            "server": Object {},
            "systeminfo": Object {
              "sg_license": Object {
                "expiry_date": "2021-03-14",
                "issue_date": "2021-01-13",
                "type": "TRIAL",
              },
            },
          },
          "coreContext": undefined,
          "uiSettings": undefined,
        }
      }
      errorMessage=""
    />
    <form
      onSubmit={[Function]}
    >
      <EuiForm>
        <input
          autoComplete="anyrandomstring"
          name="hidden"
          style={
            Object {
              "display": "none",
            }
          }
          type="text"
        />
        <EuiFormRow
          describedByIds={Array []}
          display="row"
          fullWidth={false}
          hasChildLabel={true}
          hasEmptyLabelSpace={false}
          id="sg.username"
          isInvalid={false}
          label="Username"
          labelType="label"
        >
          <EuiFieldText
            autoComplete="off"
            autoFocus={true}
            data-test-subj="sg.username"
            icon="user"
            id="sg.username"
            isInvalid={false}
            name="userName"
            onChange={[Function]}
            placeholder="Username"
            required={true}
            value=""
          />
        </EuiFormRow>
        <EuiSpacer />
        <EuiFormRow
          describedByIds={Array []}
          display="row"
          fullWidth={false}
          hasChildLabel={true}
          hasEmptyLabelSpace={false}
          id="sg.password"
          isInvalid={false}
          label="Password"
          labelType="label"
        >
          <EuiFieldPassword
            autoComplete="off"
            compressed={false}
            data-test-subj="sg.password"
            fullWidth={false}
            id="sg.password"
            isInvalid={false}
            isLoading={false}
            name="password"
            onChange={[Function]}
            placeholder="Password"
            required={true}
            value=""
          />
        </EuiFormRow>
        <EuiSpacer
          size="l"
        />
        <EuiButton
          data-test-subj="sg.login"
          fill={true}
          fullWidth={true}
          id="sg.login"
          onClick={[Function]}
          style={
            Object {
              "backgroundColor": "#4CAF50",
              "border": "none",
              "color": "white",
              "fontSize": "16px",
            }
          }
          type="submit"
        >
          Log in
        </EuiButton>
      </EuiForm>
    </form>
  </EuiPanel>
</div>
`;

exports[`LoginPage can render the page with a license and the basicauth login defaults 1`] = `
<div
  style={
    Object {
      "alignItems": "center",
      "display": "flex",
      "height": "100vh",
      "justifyContent": "center",
    }
  }
>
  <EuiPanel
    style={
      Object {
        "maxWidth": "350px",
      }
    }
  >
    <div
      style={
        Object {
          "margin": "auto",
          "maxWidth": "300px",
        }
      }
    >
      <EuiImage
        alt="Brand image"
        data-test-subj="sg.login.brandImage"
        size="fullWidth"
        url="plugins/searchguard/assets/searchguard_logo.svg"
      />
    </div>
    <EuiText
      data-test-subj="sg.login.title"
      textAlign="center"
    >
      <h2
        dangerouslySetInnerHTML={
          Object {
            "__html": "Please login to Kibana",
          }
        }
      />
    </EuiText>
    <EuiText
      data-test-subj="sg.login.subTitle"
      textAlign="center"
    >
      <p
        dangerouslySetInnerHTML={
          Object {
            "__html": "If you have forgotten your username or password, please ask your system administrator",
          }
        }
      />
    </EuiText>
    <LicenseWarningCallout
      configService={
        UiConfigService {
          "apiService": undefined,
          "config": Object {
            "authinfo": Object {},
            "elasticsearch": Object {},
            "kibana": Object {},
            "restapiinfo": Object {},
            "searchguard": Object {
              "basicauth": Object {
                "alternative_login": Object {
                  "button_text": "Login with provider",
                  "buttonstyle": "",
                  "headers": Array [],
                  "show_for_parameter": "",
                  "valid_redirects": Array [],
                },
                "login": Object {
                  "brandimage": "plugins/searchguard/assets/searchguard_logo.svg",
                  "buttonstyle": "",
                  "showbrandimage": true,
                  "subtitle": "If you have forgotten your username or password, please ask your system administrator",
                  "title": "Please login to Kibana",
                },
              },
            },
            "server": Object {},
            "systeminfo": Object {
              "sg_license": Object {
                "expiry_date": "2021-03-14",
                "issue_date": "2021-01-13",
                "type": "TRIAL",
              },
            },
          },
          "coreContext": undefined,
          "uiSettings": undefined,
        }
      }
      errorMessage=""
    />
    <form
      onSubmit={[Function]}
    >
      <EuiForm>
        <input
          autoComplete="anyrandomstring"
          name="hidden"
          style={
            Object {
              "display": "none",
            }
          }
          type="text"
        />
        <EuiFormRow
          describedByIds={Array []}
          display="row"
          fullWidth={false}
          hasChildLabel={true}
          hasEmptyLabelSpace={false}
          id="sg.username"
          isInvalid={false}
          label="Username"
          labelType="label"
        >
          <EuiFieldText
            autoComplete="off"
            autoFocus={true}
            data-test-subj="sg.username"
            icon="user"
            id="sg.username"
            isInvalid={false}
            name="userName"
            onChange={[Function]}
            placeholder="Username"
            required={true}
            value=""
          />
        </EuiFormRow>
        <EuiSpacer />
        <EuiFormRow
          describedByIds={Array []}
          display="row"
          fullWidth={false}
          hasChildLabel={true}
          hasEmptyLabelSpace={false}
          id="sg.password"
          isInvalid={false}
          label="Password"
          labelType="label"
        >
          <EuiFieldPassword
            autoComplete="off"
            compressed={false}
            data-test-subj="sg.password"
            fullWidth={false}
            id="sg.password"
            isInvalid={false}
            isLoading={false}
            name="password"
            onChange={[Function]}
            placeholder="Password"
            required={true}
            value=""
          />
        </EuiFormRow>
        <EuiSpacer
          size="l"
        />
        <EuiButton
          data-test-subj="sg.login"
          fill={true}
          fullWidth={true}
          id="sg.login"
          onClick={[Function]}
          style={Object {}}
          type="submit"
        >
          Log in
        </EuiButton>
      </EuiForm>
    </form>
  </EuiPanel>
</div>
`;
