# kibana_authtokens:
#   extends:
#   - .playwright_test
#   variables:
#     TEST_DEFINITIONS: ".*kibana_authtokens.*"

kibana_basicauth:
  extends:
  - .playwright_test
  variables:
    TEST_DEFINITIONS: ".*kibana_basicauth.*"

kibana_configui_1:
  extends:
  - .playwright_test
  variables:
    TEST_DEFINITIONS: ".*kibana_configui_1.*" 

kibana_configui_2:
  extends:
  - .playwright_test
  variables:
    TEST_DEFINITIONS: ".*kibana_configui_2.*"  

# kibana_configui_3:
#   extends:
#   - .playwright_test
#   variables:
#     TEST_DEFINITIONS: ".*kibana_configui_3.*"


# kibana_jwt:
#   extends:
#   - .playwright_test
#   variables:
#     TEST_DEFINITIONS: ".*kibana_jwt.*"

# kibana_oidc:
#   extends:
#   - .be_integration_test
#   variables:
#     TEST_DEFINITIONS: ".*kibana_oidc_keycloak.*"



# kibana_proxy:
#   extends:
#   - .playwright_test
#   variables:
#     TEST_DEFINITIONS: ".*kibana_proxy.*"


# kibana_saml:
#   extends:
#   - .playwright_test
#   variables:
#     TEST_DEFINITIONS: ".*kibana_saml_keycloak.*" 



.playwright_test:
  allow_failure: false
  stage: "Frontend Int Tests"
  tags:
    - test-large
  rules:
    - if: '$DOCKER_ONLY'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
    - if: '$CI_COMMIT_TAG =~ /^sg-flx-.*/'
      when: always
    - if: $FORCE_SGI
      when: always
    - if: '$CI_COMMIT_MESSAGE =~ /.*SKIP-SGI.*/'
      when: never
    - if: '$CI_COMMIT_MESSAGE =~ /.*SKIP-TESTS.*/'
      when: never
    - if: '$CI_COMMIT_MESSAGE =~ /.*FORCE_SGI.*/'
      when: always
  image: docker:${DOCKER_VERSION}
  services:
    - docker:${DOCKER_VERSION}-dind
  script:
    - |
       
       sudo sysctl -w vm.max_map_count=262144
       
       echo "Login in into Docker Hub"      
       echo "$DOCKER_PASSWORD" | docker login --username floragunncom --password-stdin docker.io > /dev/null        

       echo "SNAPSHOT_REVISION=$SNAPSHOT_REVISION"
       echo "TEST_DEFINITIONS $TEST_DEFINITIONS"
       
       git clone --depth 1 --branch $IT_BRANCH https://gitlab-ci-token:${CI_JOB_TOKEN}@git.floragunn.com/private/sgi8.git > /dev/null
       cd sgi8/server
       rm -f docker/elasticsearch/search-guard.zip
       rm -f docker/kibana/kibana-plugin.zip
       
       # We need a kibana plugin zip in/as docker/kibana/kibana-plugin.zip
       # We also need a search guard zip in/as docker/elasticsearch/search-guard.zip
       
       wget -O docker/elasticsearch/search-guard.zip "$SG_ES_PLUGIN"
       #wget -O docker/elasticsearch/search-guard.zip https://maven.search-guard.com//search-guard-flx-release/com/floragunn/search-guard-flx-elasticsearch-plugin/1.0.0-beta-4-es-8.2.3/search-guard-flx-elasticsearch-plugin-1.0.0-beta-4-es-8.2.3.zip
       
       cp ../../target/releases/search-guard-flx-kibana-plugin-${BUILD_VERSION}.zip docker/kibana/kibana-plugin.zip       
       ./run_test_definition.sh "$TEST_DEFINITIONS"
  artifacts:
    when: always
    paths:
      - sgi8/client/test/testresults**/**/*
    reports:
      junit:
        - "sgi8/client/test/testresults**/junit/Test*.xml"
    expire_in: 30 days